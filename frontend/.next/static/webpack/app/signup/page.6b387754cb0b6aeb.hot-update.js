"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/signup/page",{

/***/ "(app-pages-browser)/./utils/api.ts":
/*!**********************!*\
  !*** ./utils/api.ts ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authAPI: function() { return /* binding */ authAPI; },\n/* harmony export */   healthAPI: function() { return /* binding */ healthAPI; },\n/* harmony export */   invoicesAPI: function() { return /* binding */ invoicesAPI; },\n/* harmony export */   productsAPI: function() { return /* binding */ productsAPI; }\n/* harmony export */ });\nconst API_BASE_URL = \"http://localhost:5001/api\" || 0;\n// Helper function to get auth headers\nconst getAuthHeaders = ()=>{\n    const token = localStorage.getItem(\"token\");\n    return {\n        \"Content-Type\": \"application/json\",\n        ...token && {\n            Authorization: \"Bearer \".concat(token)\n        }\n    };\n};\n// Helper function to handle API responses\nconst handleResponse = async (response)=>{\n    const data = await response.json();\n    if (!response.ok) {\n        throw new Error(data.message || \"Something went wrong\");\n    }\n    return data;\n};\n// Auth API calls\nconst authAPI = {\n    register: async (userData)=>{\n        const response = await fetch(\"\".concat(API_BASE_URL, \"/auth/register\"), {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(userData)\n        });\n        return handleResponse(response);\n    },\n    login: async (credentials)=>{\n        const response = await fetch(\"\".concat(API_BASE_URL, \"/auth/login\"), {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(credentials)\n        });\n        return handleResponse(response);\n    },\n    getMe: async ()=>{\n        const response = await fetch(\"\".concat(API_BASE_URL, \"/auth/me\"), {\n            headers: getAuthHeaders()\n        });\n        return handleResponse(response);\n    }\n};\n// Products API calls\nconst productsAPI = {\n    getAll: async ()=>{\n        const response = await fetch(\"\".concat(API_BASE_URL, \"/products\"), {\n            headers: getAuthHeaders()\n        });\n        return handleResponse(response);\n    },\n    create: async (productData)=>{\n        const response = await fetch(\"\".concat(API_BASE_URL, \"/products\"), {\n            method: \"POST\",\n            headers: getAuthHeaders(),\n            body: JSON.stringify(productData)\n        });\n        return handleResponse(response);\n    },\n    update: async (id, productData)=>{\n        const response = await fetch(\"\".concat(API_BASE_URL, \"/products/\").concat(id), {\n            method: \"PUT\",\n            headers: getAuthHeaders(),\n            body: JSON.stringify(productData)\n        });\n        return handleResponse(response);\n    },\n    delete: async (id)=>{\n        const response = await fetch(\"\".concat(API_BASE_URL, \"/products/\").concat(id), {\n            method: \"DELETE\",\n            headers: getAuthHeaders()\n        });\n        return handleResponse(response);\n    },\n    deleteAll: async ()=>{\n        const response = await fetch(\"\".concat(API_BASE_URL, \"/products/clear\"), {\n            method: \"DELETE\",\n            headers: getAuthHeaders()\n        });\n        return handleResponse(response);\n    }\n};\n// Invoices API calls\nconst invoicesAPI = {\n    getAll: async ()=>{\n        const response = await fetch(\"\".concat(API_BASE_URL, \"/invoices\"), {\n            headers: getAuthHeaders()\n        });\n        return handleResponse(response);\n    },\n    generate: async (data)=>{\n        const response = await fetch(\"\".concat(API_BASE_URL, \"/invoices/generate\"), {\n            method: \"POST\",\n            headers: getAuthHeaders(),\n            body: JSON.stringify(data)\n        });\n        return handleResponse(response);\n    },\n    generatePDF: async (data)=>{\n        const response = await fetch(\"\".concat(API_BASE_URL, \"/invoices/generate-pdf\"), {\n            method: \"POST\",\n            headers: getAuthHeaders(),\n            body: JSON.stringify(data)\n        });\n        if (!response.ok) {\n            const errorData = await response.json();\n            throw new Error(errorData.message || \"Failed to generate PDF\");\n        }\n        return response.blob();\n    },\n    getById: async (id)=>{\n        const response = await fetch(\"\".concat(API_BASE_URL, \"/invoices/\").concat(id), {\n            headers: getAuthHeaders()\n        });\n        return handleResponse(response);\n    }\n};\n// Health check\nconst healthAPI = {\n    check: async ()=>{\n        const response = await fetch(\"\".concat(API_BASE_URL, \"/health\"));\n        return handleResponse(response);\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./utils/api.ts\n"));

/***/ })

});